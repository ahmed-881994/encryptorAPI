openapi: 3.0.2
info:
  title: Encryptor
  contact:
    name: Ahmed Safwat
    email: ahmed-881994@hotmail.com
  description: |
    Encrypt plain text using simple encryption *i.e*: ***Caesar***, ***Morse***, etc.

    Available methods:

      * Caesar
      * Morse
      * Numeric
      * Inverse Numeric

    ---

    [GitHub repo](https://github.com/ahmed-881994/encryptorAPI)
    
    [Linkedin](https://www.linkedin.com/in/ahmed-safwat-eldamanhoury/)
  version: 1.0.3
servers:
  - url: "{protocol}://127.0.0.1:{port}"
    variables: 
      port:
        enum:
          - "8000"
        default: "8000"
      protocol:
        enum:
          - "http"
          - "https"
        default: "http"
    description: localhost
paths:
  /caesar:
    post:
      summary: Caesar
      operationId: caesar_caesar_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptCaesarRq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptRs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
  /morse:
    post:
      summary: Morse
      operationId: morse_morse_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptRq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptRs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
  /numeric:
    post:
      summary: Numeric
      operationId: numeric_numeric_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptRq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptRs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
  /reversenumeric:
    post:
      summary: Reverse Numeric
      operationId: reverse_numeric_reversenumeric_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptRq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptRs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
  /natoalphabet:
    post:
      summary: Nato Alphabet
      operationId: nato_alphabet_natoalphabet_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptNATORq'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptRs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorRs'
components:
  schemas:
    Detail:
      title: Detail
      required:
        - msg
      type: object
      properties:
        msg:
          title: Msg
          type: string
    EncryptCaesarRq:
      title: EncryptCaesarRq
      required:
        - plainText
        - language
        - shift
      type: object
      properties:
        plainText:
          title: Plaintext
          minLength: 1
          type: string
        language:
          $ref: '#/components/schemas/lang_enum'
        shift:
          title: Shift
          type: integer
    EncryptNATORq:
      title: EncryptNATORq
      required:
        - plainText
      type: object
      properties:
        plainText:
          title: Plaintext
          minLength: 1
          type: string
    EncryptRq:
      title: EncryptRq
      required:
        - plainText
        - language
      type: object
      properties:
        plainText:
          title: Plaintext
          minLength: 1
          type: string
        language:
          $ref: '#/components/schemas/lang_enum'
    EncryptRs:
      title: EncryptRs
      required:
        - cypherText
      type: object
      properties:
        cypherText:
          title: Cyphertext
          type: string
    ErrorRs:
      title: ErrorRs
      required:
        - detail
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/Detail'
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    lang_enum:
      title: lang_enum
      enum:
        - AR
        - EN
      type: string
      description: An enumeration.
